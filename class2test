

1) Name what each of the below is:
  a = 1 # => ex. a is a local variable, and is a Fixnum object with value 1
  @a = 2
    instance variable
  user = User.new
    instantiate a new instance of the User class
  user.name
    getter
  user.name = "Joe"
    setter

2) How does a class mixin a module?
    The class calls the module with inclide.  Example:  include Module

3) What's the difference between class variables and instance variables?
    An instance variable (@xxxx) belongs to only one instance while a class variable (@@xxxx) can belong to any instance in the class. Instance variables track the state of objects.

4) What does attr_accessor do?
    is a shortcut for defining getter and setter methods.

5) How would you describe this expression: Dog.some_method
    a class method being called

6) In Ruby, what's the difference between subclassing and mixing in modules?
    Subclassing is when you have a new class but can use the methods defined in the superclass.  Mixing in modules is when you include a module for use in a class.

7) Given that I can instantiate a user like this: User.new('Bob'), what would the initialize method look like for the User class?
    def initialize(name)
        @name = name
        end

8) Can you call instance methods of the same class from other instance methods in that class?
    Yes

9) When you get stuck, what's the process you use to try to trap the error?
    binding.pry
